<?php

namespace Tests\AppBundle\Controller;

use AppBundle\Entity\Job;
use AppBundle\Test\BaseTestCase;

class DefaultControllerTest extends BaseTestCase
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->job1 = new Job();
        $this->job1->setTitle("job1");
        $this->job1->setShortDescription("job_1_description");
        $this->em->persist($this->job1);

        $this->job2 = new Job();
        $this->job2->setTitle("job2");
        $this->job2->setShortDescription("job_2_description");
        $this->em->persist($this->job2);
        $this->em->flush();
    }

    public function testJobsPresentOnIndexPage()
    {
        $crawler = $this->api("/");

        $job_items = $this->css(".index-job-item", $crawler);
        $this->assertEquals(2, count($job_items));

        $this->assertContains($this->job1->getTitle(), $job_items->getNode(0)->textContent);
        $this->assertContains($this->job1->getShortDescription(), $job_items->getNode(0)->textContent);

        $this->assertContains($this->job2->getTitle(), $job_items->getNode(1)->textContent);
        $this->assertContains($this->job2->getShortDescription(), $job_items->getNode(1)->textContent);
    }

    public function testJobsPresentOnJobPage()
    {
        // проверям что оба юрла с и без названия выозвразают результат
        $c1 = $this->api("/j/{$this->job1->getId()}");
        $c2 = $this->api("/j/{$this->job1->getId()}/{$this->job1->getTitle()}");
    }

}
